@model MainModel

@{
	ViewData["Title"] = "Home Page";
}
<header>
	<h1>반도체 공정 시스템</h1>
</header>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
	$(document).ready(function () {
		$(".individualHistoryButton").mouseover(function () {
			$(".individualHistoryButton .dropdown-content").stop().slideDown("fast");
		});

		$(".individualHistoryButton").mouseleave(function () {
			$(".individualHistoryButton .dropdown-content").stop().slideUp("fast");
		});

		// 드롭다운 항목 클릭 시 창 열기
		$(".individualHistoryButton .dropdown-content div").click(function () {
			var label = $(this).text();
			openNewWindow(label, 1300, 900);
		});
	});

</script>

<script>
	function openNewWindow(dataType, width, height) {
		// 현재 창의 URL을 기반으로 새 창을 엽니다.
		var newWindow = window.open('', '_blank', 'width=' + width + ',height=' + height);

		// 새 창에 스타일 및 데이터를 표시합니다.
		newWindow.document.write('<style>' +
			'h2 { text-align: center; font-family: "맑은 고딕", Arial, sans-serif; color: #333; }' +
			'table { width: 100%; border-collapse: collapse; margin-top: 20px; }' +
			'th, td { padding: 10px; text-align: center; border: 1px solid #ddd; }' +
			'th { background-color: #f2f2f2; }' +
			'</style>');

		// 테두리 추가
		newWindow.document.write('<style>' +
			'body { border: 4px solid #ccc; }' +
			'</style>');

		// 각 버튼에 따라 다른 데이터를 가져와서 출력합니다.
		if (dataType === 'totalProduction') {
			newWindow.document.write('<h2>오늘 총 생산량 데이터</h2>');
			// 여기에 해당 데이터를 가져와서 출력하는 코드를 추가하세요.
		} else if (dataType === 'totalDefectRate') {
			newWindow.document.write('<h2>전체 불량률 데이터</h2>');
			// 여기에 해당 데이터를 가져와서 출력하는 코드를 추가하세요.
		} else if (dataType === 'fullHistory') {
			newWindow.document.write('<h2>전체 이력 데이터</h2>');
			// 서버에서 받아온 데이터를 HTML 테이블로 출력합니다.
			newWindow.document.write('<table>');
			newWindow.document.write('<tr>');
			newWindow.document.write('<th>LOT ID</th>');
			newWindow.document.write('<th>SERIAL</th>');
			newWindow.document.write('<th>시작 시간</th>');
			newWindow.document.write('<th>끝난 시간</th>');
			newWindow.document.write('<th>소요 시간</th>');
			newWindow.document.write('<th>프로세스1</th>');
			newWindow.document.write('<th>프로세스2</th>');
			newWindow.document.write('<th>프로세스3</th>');
			newWindow.document.write('<th>프로세스4</th>');
			newWindow.document.write('<th>등급</th>');
			newWindow.document.write('</tr>');

	@foreach (var historyItem in Model.Total_historyData)
	{
		@:newWindow.document.write('<tr>');
		@:newWindow.document.write('<td>' + '@historyItem.lot_id' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.serial' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.start_time' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.end_time' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.spend_time' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.process1_idx' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.process2_idx' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.process3_idx' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.process4_idx' + '</td>');
		@:newWindow.document.write('<td>' + '@historyItem.grade' + '</td>');
		@:newWindow.document.write('</tr>');
	}
		newWindow.document.write('</table>');
		} else if (dataType === 'individualHistory') {
			newWindow.document.write('<h2>개별 이력 데이터</h2>');
			// 여기에 해당 데이터를 가져와서 출력하는 코드를 추가하세요.
		}
		else if (dataType === '산화 공정') {
			newWindow.document.write('<h2>산화 공정 데이터</h2>');
			// 데이터를 가져와서 출력하는 코드를 추가하세요.
		} else if (dataType === '포토 공정') {
			newWindow.document.write('<h2>포토 공정 데이터</h2>');
			// 데이터를 가져와서 출력하는 코드를 추가하세요.
		} else if (dataType === '증착 공정') {
			newWindow.document.write('<h2>증착 공정 데이터</h2>');
			// 데이터를 가져와서 출력하는 코드를 추가하세요.
		} else if (dataType === '패키지 공정') {
			newWindow.document.write('<h2>패키지 공정 데이터</h2>');
			// 데이터를 가져와서 출력하는 코드를 추가하세요.
		}
		newWindow.document.write('<div style="overflow: auto;">');
		newWindow.document.write('<table>');
		// 테이블 출력 코드 추가
		newWindow.document.write('</table>');
		newWindow.document.write('</div>');
	}
</script>

<!-- 스타일 추가 -->
<style>
	body {
		align-items: center;
		justify-content: center;
		height: 100vh;
		margin: 0;
		background-color: #f4f4f4; /* 밝은 회색 배경 */
		font-family: 'Arial', sans-serif; /* 표준 글꼴 선택 */
	}

	header {
		background-color: #333; /* 헤더의 어두운 배경 */
		color: #fff; /* 헤더의 흰색 텍스트 */
		padding: 10px;
		text-align: center;
	}

	.wrapperBox {
		position: absolute;
		top: 130px;
		left: 400px;
		display: flex;
		flex-wrap: wrap; /* 상자가 다음 줄로 넘어갈 수 있게 함 */
		justify-content: center; /* 상자를 수평으로 가운데 정렬 */
	}

	.subBox, .horizontalBox, .additionalSubBox1, .additionalSubBox2, .additionalSubBox3, .additionalSubBox4, .additionalSubBox5,
	.additionalSubBox6, .additionalSubBox7, .additionalSubBox8, .circle, .fullHistoryButton, .GradeBox1, .GradeBox2, .GradeBox3, .GradeBox4, .individualHistoryButton, .startButton, .totalDefectRateButton, .totalProductionButton, .lotSerialBox {
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.7); /* 은은한 박스 그림자 추가 */
	}

	.subBox {
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 300px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.processInfo {
		font-weight: bold;
		margin-bottom: 20px;
	}

	.innerBox {
		display: flex;
		flex-direction: column;
		align-items: center;
		margin-top: 10px; /* 간격 조절 */
	}

	.labelBox {
		border: 1px solid #000;
		display: block;
		margin: 10px; /* 간격 조절 */
		padding: 10px;
		box-sizing: border-box; /* 박스 크기를 padding까지 포함하여 계산 */
		border-radius: 5px; /* 테두리 둥글게 조절 */
		width: 130%; /* 가로 길이 조절 */
	}

	/* 공정 진행 박스 */
	.horizontalBox {
		position: absolute;
		top: 330px;
		left: -45px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 1100px; /* 가로 길이 조절 */
		height: 100px; /* 세로 길이 조절 */
		border-radius: 10px; /* 테두리 둥글게 조절 */
		margin-left: 5%; /* 왼쪽 여백 조절 */
		margin-right: 5%; /* 오른쪽 여백 조절 */
	}

	.arrow {
		width: 20px;
		height: 0;
		border-style: solid;
		display: inline-block;
		margin: 0 18px;
		transform: translateY(-15px); /* 화살표를 위로 15픽셀 이동 */
	}

	.circle {
		width: 20px;
		height: 20px;
		background-color: #000;
		border-radius: 40%;
		display: inline-block;
		margin: 0 92px;
		transform: translateY(-15px); /* 화살표를 위로 15픽셀 이동 */
	}

	/* 8개의 박스 */
	.additionalSubBox1 {
		position: absolute;
		top: 460px;
		left: 0px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.additionalSubBox2 {
		position: absolute;
		top: 460px;
		left: 280px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.additionalSubBox3 {
		position: absolute;
		top: 460px;
		left: 560px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.additionalSubBox4 {
		position: absolute;
		top: 460px;
		left: 840px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.additionalSubBox5 {
		position: absolute;
		top: 640px;
		left: 280px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.additionalSubBox6 {
		position: absolute;
		top: 640px;
		left: 560px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.additionalSubBox7 {
		position: absolute;
		top: 640px;
		left: 840px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	.additionalSubBox8 {
		position: absolute;
		top: 640px;
		left: 0px;
		border: 1px solid #000;
		margin: 10px;
		padding: 10px;
		box-sizing: border-box;
		width: 260px;
		height: 150px;
		display: flex;
		flex-direction: column;
		align-items: center;
		border-radius: 10px; /* 테두리 둥글게 조절 */
	}

	/* 랏번호 및 시리얼 박스 */
	.lotSerialBox {
		position: absolute;
		top: 150px;
		left: 90px;
		/* 가로 길이를 설정합니다. */
		width: 200px;
		display: block;
		flex-direction: column;
		align-items: center;
		border: 1px solid #000;
		padding: 10px;
		box-sizing: border-box;
		border-radius: 5px;
	}

	/* 랏번호 및 시리얼 박스 안 글씨 */
	.lotSerialLabel {
		font-weight: bold;
		margin-bottom: 3px;
		padding-left: 10px;
	}

	/* 오늘 총 생산량 버튼 */
	.totalProductionButton {
		font-weight: bold;
		/* position 속성을 사용하여 요소의 위치를 설정합니다. */
		position: absolute;
		/* 요소의 위쪽에서의 위치를 설정합니다. */
		top: 300px;
		/* 요소의 왼쪽에서의 위치를 설정합니다. */
		left: 90px;
		/* display 속성을 사용하여 Flexbox 레이아웃을 설정합니다. */
		display: flex;
		/* flex-direction 속성을 사용하여 주축을 세로로 설정합니다. */
		flex-direction: column;
		/* align-items 속성을 사용하여 주축 방향으로 요소들을 가운데 정렬합니다. */
		align-items: center;
		/* justify-content 속성을 사용하여 교차축 방향으로 요소들을 가운데 정렬합니다. */
		justify-content: center;
		/* 세로 길이를 설정합니다. */
		height: 70px;
		/* 가로 길이를 설정합니다. */
		width: 200px;
		/* box-sizing 속성을 사용하여 요소의 크기 계산 방식을 설정합니다. */
		box-sizing: border-box;
		/* cursor 속성을 사용하여 마우스 커서 스타일을 설정합니다. */
		cursor: pointer;
		/* 배경 색상을 설정합니다. */
		background-color: #000;
		/* 텍스트 색상을 설정합니다. */
		color: #fff;
		/* 테두리를 제거합니다. */
		border: 1px solid #000;
		/* 테두리의 꼭지점을 둥글게 조절합니다. */
		border-radius: 5px;
	}

	.totalProductionLabel {
		font-weight: bold;
		margin-bottom: 5px;
	}

	/* 전체 불량률 버튼 */
	.totalDefectRateButton {
		font-weight: bold;
		/* position 속성을 사용하여 요소의 위치를 설정합니다. */
		position: absolute;
		/* 요소의 위쪽에서의 위치를 설정합니다. */
		top: 390px;
		/* 요소의 왼쪽에서의 위치를 설정합니다. */
		left: 90px;
		/* display 속성을 사용하여 Flexbox 레이아웃을 설정합니다. */
		display: flex;
		/* flex-direction 속성을 사용하여 주축을 세로로 설정합니다. */
		flex-direction: column;
		/* align-items 속성을 사용하여 주축 방향으로 요소들을 가운데 정렬합니다. */
		align-items: center;
		/* justify-content 속성을 사용하여 교차축 방향으로 요소들을 가운데 정렬합니다. */
		justify-content: center;
		/* 세로 길이를 설정합니다. */
		height: 70px;
		/* 가로 길이를 설정합니다. */
		width: 200px;
		/* box-sizing 속성을 사용하여 요소의 크기 계산 방식을 설정합니다. */
		box-sizing: border-box;
		/* cursor 속성을 사용하여 마우스 커서 스타일을 설정합니다. */
		cursor: pointer;
		/* 배경 색상을 설정합니다. */
		background-color: #000;
		/* 텍스트 색상을 설정합니다. */
		color: #fff;
		/* 테두리를 제거합니다. */
		border: 1px solid #000;
		/* 테두리의 꼭지점을 둥글게 조절합니다. */
		border-radius: 5px;
	}

	.totalDefectRateLabel {
		font-weight: bold;
		margin-bottom: 5px;
	}

	.GradeBox1 {
		position: absolute;
		top: 530px;
		left: 120px;
		display: block;
		width: 150px; /* 가로 길이 조절 */
		flex-direction: column;
		align-items: center;
		border: 1px solid #000;
		padding: 10px;
		box-sizing: border-box;
		border-radius: 5px;
	}

	.GradeLabel1 {
		font-weight: bold;
		margin-bottom: 5px;
		padding-left: 10px;
	}

	.GradeBox2 {
		position: absolute;
		top: 600px;
		left: 120px;
		display: block;
		width: 150px; /* 가로 길이 조절 */
		flex-direction: column;
		align-items: center;
		border: 1px solid #000;
		padding: 10px;
		box-sizing: border-box;
		border-radius: 5px;
	}

	.GradeLabel2 {
		font-weight: bold;
		margin-bottom: 5px;
		padding-left: 10px;
	}

	.GradeBox3 {
		position: absolute;
		top: 670px;
		left: 120px;
		display: block;
		width: 150px; /* 가로 길이 조절 */
		flex-direction: column;
		align-items: center;
		border: 1px solid #000;
		padding: 10px;
		box-sizing: border-box;
		border-radius: 5px;
	}

	.GradeLabel3 {
		font-weight: bold;
		margin-bottom: 5px;
		padding-left: 10px;
	}

	.GradeBox4 {
		position: absolute;
		top: 740px;
		left: 120px;
		display: block;
		width: 150px; /* 가로 길이 조절 */
		flex-direction: column;
		align-items: center;
		border: 1px solid #000;
		padding: 10px;
		box-sizing: border-box;
		border-radius: 5px;
	}

	.GradeLabel4 {
		font-weight: bold;
		margin-bottom: 5px;
		padding-left: 10px;
	}

	.startButton {
		font-weight: bold;
		/* position 속성을 사용하여 요소의 위치를 설정합니다. */
		position: absolute;
		/* 요소의 위쪽에서의 위치를 설정합니다. */
		top: 850px;
		/* 요소의 왼쪽에서의 위치를 설정합니다. */
		left: 90px;
		/* display 속성을 사용하여 Flexbox 레이아웃을 설정합니다. */
		display: flex;
		/* flex-direction 속성을 사용하여 주축을 세로로 설정합니다. */
		flex-direction: column;
		/* align-items 속성을 사용하여 주축 방향으로 요소들을 가운데 정렬합니다. */
		align-items: center;
		/* justify-content 속성을 사용하여 교차축 방향으로 요소들을 가운데 정렬합니다. */
		justify-content: center;
		/* 세로 길이를 설정합니다. */
		height: 70px;
		/* 가로 길이를 설정합니다. */
		width: 200px;
		/* box-sizing 속성을 사용하여 요소의 크기 계산 방식을 설정합니다. */
		box-sizing: border-box;
		/* cursor 속성을 사용하여 마우스 커서 스타일을 설정합니다. */
		cursor: pointer;
		/* 배경 색상을 설정합니다. */
		background-color: #000;
		/* 텍스트 색상을 설정합니다. */
		color: #fff;
		/* 테두리를 제거합니다. */
		border: 1px solid #000;
		/* 테두리의 꼭지점을 둥글게 조절합니다. */
		border-radius: 5px;
	}

	/* 전체 이력 버튼 */
	.fullHistoryButton {
		font-weight: bold;
		/* position 속성을 사용하여 요소의 위치를 설정합니다. */
		position: absolute;
		/* 요소의 위쪽에서의 위치를 설정합니다. */
		top: 150px;
		/* 요소의 왼쪽에서의 위치를 설정합니다. */
		left: 1600px;
		/* display 속성을 사용하여 Flexbox 레이아웃을 설정합니다. */
		display: flex;
		/* flex-direction 속성을 사용하여 주축을 세로로 설정합니다. */
		flex-direction: column;
		/* align-items 속성을 사용하여 주축 방향으로 요소들을 가운데 정렬합니다. */
		align-items: center;
		/* justify-content 속성을 사용하여 교차축 방향으로 요소들을 가운데 정렬합니다. */
		justify-content: center;
		/* 세로 길이를 설정합니다. */
		height: 70px;
		/* 가로 길이를 설정합니다. */
		width: 200px;
		/* box-sizing 속성을 사용하여 요소의 크기 계산 방식을 설정합니다. */
		box-sizing: border-box;
		/* cursor 속성을 사용하여 마우스 커서 스타일을 설정합니다. */
		cursor: pointer;
		/* 배경 색상을 설정합니다. */
		background-color: #000;
		/* 텍스트 색상을 설정합니다. */
		color: #fff;
		/* 테두리를 제거합니다. */
		border: 1px solid #000;
		/* 테두리의 꼭지점을 둥글게 조절합니다. */
		border-radius: 5px;
	}

	/* 개별 이력 버튼 */
	.individualHistoryButton {
		font-weight: bold;
		/* position 속성을 사용하여 요소의 위치를 설정합니다. */
		position: absolute;
		/* 요소의 위쪽에서의 위치를 설정합니다. */
		top: 240px;
		/* 요소의 왼쪽에서의 위치를 설정합니다. */
		left: 1600px;
		/* display 속성을 사용하여 Flexbox 레이아웃을 설정합니다. */
		display: flex;
		/* flex-direction 속성을 사용하여 주축을 세로로 설정합니다. */
		flex-direction: column;
		/* align-items 속성을 사용하여 주축 방향으로 요소들을 가운데 정렬합니다. */
		align-items: center;
		/* justify-content 속성을 사용하여 교차축 방향으로 요소들을 가운데 정렬합니다. */
		justify-content: center;
		/* 세로 길이를 설정합니다. */
		height: 70px;
		/* 가로 길이를 설정합니다. */
		width: 200px;
		/* box-sizing 속성을 사용하여 요소의 크기 계산 방식을 설정합니다. */
		box-sizing: border-box;
		/* cursor 속성을 사용하여 마우스 커서 스타일을 설정합니다. */
		cursor: pointer;
		/* 배경 색상을 설정합니다. */
		background-color: #000;
		/* 텍스트 색상을 설정합니다. */
		color: #fff;
		/* 테두리를 제거합니다. */
		border: 1px solid #000;
		/* 테두리의 꼭지점을 둥글게 조절합니다. */
		border-radius: 5px;
		transition: transform 0.3s ease;
	}

		.individualHistoryButton:hover {
			transform: scale(0.95);
		}

		/* 드롭다운 스타일 */
		.individualHistoryButton .dropdown-content {
			display: none;
			position: absolute;
			background-color: black;
			box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
			z-index: 1;
			width: 200px; /* 개별 이력 버튼과 같은 가로 길이 */
			top: 60px; /* 버튼 아래로 나타나도록 설정 */
			/* 테두리의 꼭지점을 둥글게 조절합니다. */
			border-radius: 5px;
		}

		.individualHistoryButton .dropdown-content div {
			padding: 12px 16px;
			display: block;
			color: white;
			text-decoration: none;
			width: 100%; /* 100%로 설정하여 부모의 가로 길이에 맞춤 */
			box-sizing: border-box; /* padding을 포함한 전체 가로 길이를 유지 */
		}

		/* 개별 이력 버튼 라벨에 호버 효과 */
		.individualHistoryButton .dropdown-content div:hover {
			text-decoration: underline;
			transform: scale(1.05); /* 예시로 1.05배 크기로 확대하도록 설정 */
		}

		/* 버튼이 안으로 들어가는 효과 */
		.totalProductionButton,
		.totalDefectRateButton,
		.startButton,
		.fullHistoryButton,
		.individualHistoryButton {
			transition: transform 0.3s ease; /* transform 속성에 대한 0.3초 동안의 변화를 부드럽게 적용 */
		}

		.totalProductionButton:hover,
		.totalDefectRateButton:hover,
		.startButton:hover,
		.fullHistoryButton:hover,
		.individualHistoryButton:hover {
			transform: scale(0.95); /* hover 상태에서 버튼을 0.95배 축소시킴 */
		}
</style>

<divbutton button class="totalProductionButton" onclick="openNewWindow('totalProduction', 400, 400)">오늘 총 생산량</divbutton>
<divbutton button class="totalDefectRateButton" onclick="openNewWindow('totalDefectRate', 400, 400)">전체 불량률</divbutton>
<divbutton button class="startButton">S T A R T</divbutton>
<divbutton button class="fullHistoryButton" onclick="openNewWindow('fullHistory', 1300, 900)">전체 이력</divbutton>
<divbutton button class="individualHistoryButton">
	개별 이력
	<div class="dropdown-content">
		<div>산화 공정</div>
		<div>포토 공정</div>
		<div>증착 공정</div>
		<div>패키지 공정</div>
	</div>
</divbutton>

<div class="lotSerialBox">
	@foreach (var historyItem in Model.Total_historyData)
	{
		<div class="lotSerialLabel">LOT ID : @historyItem.lot_id</div>
		<!-- 여기에 다른 필요한 출력 항목 추가 -->
	}
	@foreach (var historyItem in Model.Total_historyData)
	{
		<div class="lotSerialLabel">SERIAL : @historyItem.serial</div>
		<!-- SERIAL 값이 있다면 여기에 추가하세요 -->
	}
</div>

<div class="GradeBox1">
	<div class="GradeLabel1">1등급 :</div>
	<!-- 총 생산량 값이 있다면 여기에 추가하세요 -->
	<div><!-- 여기에 총 생산량 값 입력 --></div>
</div>

<div class="GradeBox2">
	<div class="GradeLabel2">2등급 :</div>
	<!-- 총 생산량 값이 있다면 여기에 추가하세요 -->
	<div><!-- 여기에 총 생산량 값 입력 --></div>
</div>

<div class="GradeBox3">
	<div class="GradeLabel3">3등급 :</div>
	<!-- 총 생산량 값이 있다면 여기에 추가하세요 -->
	<div><!-- 여기에 총 생산량 값 입력 --></div>
</div>

<div class="GradeBox4">
	<div class="GradeLabel4">4등급 :</div>
	<!-- 총 생산량 값이 있다면 여기에 추가하세요 -->
	<div><!-- 여기에 총 생산량 값 입력 --></div>
</div>


<div class="wrapperBox">
	<!-- 첫 번째 상자 -->
	<div class="subBox">
		<div class="processInfo">웨이퍼 제조, 산화 공정</div>
		<div class="innerBox">
			<div class="labelBox">총수량 :</div>
			<div class="labelBox">불량품 :</div>
			<div class="labelBox">불량률 :</div>
		</div>
	</div>

	<!-- 두 번째 상자 -->
	<div class="subBox">
		<div class="processInfo">포토, 식각 공정</div>
		<div class="innerBox">
			<div class="labelBox">총수량 :</div>
			<div class="labelBox">불량품 :</div>
			<div class="labelBox">불량률 :</div>
		</div>
	</div>

	<!-- 세 번째 상자 -->
	<div class="subBox">
		<div class="processInfo">증착, 금속배선 공정</div>
		<div class="innerBox">
			<div class="labelBox">총수량 :</div>
			<div class="labelBox">불량품 :</div>
			<div class="labelBox">불량률 :</div>
		</div>
	</div>

	<!-- 네 번째 상자 -->
	<div class="subBox">
		<div class="processInfo">EDS, 패키징 공정</div>
		<div class="innerBox">
			<div class="labelBox">총수량 :</div>
			<div class="labelBox">불량품 :</div>
			<div class="labelBox">불량률 :</div>
		</div>
	</div>

	<!-- 가로로 긴 상자 추가 -->
	<div class="horizontalBox">
		<div class="processInfo">공정 진행</div>

		<!-- 4개의 원 -->
		<div class="circle"></div>
		<div class="arrow" style="border-width: 10px 0 10px 20px; border-color: transparent transparent transparent #000;"></div>
		<div class="circle"></div>
		<div class="arrow" style="border-width: 10px 0 10px 20px; border-color: transparent transparent transparent #000;"></div>
		<div class="circle"></div>
		<div class="arrow" style="border-width: 10px 0 10px 20px; border-color: transparent transparent transparent #000;"></div>
		<div class="circle"></div>
	</div>

	<!-- 8 개의 상자 -->
	<div class="additionalSubBox1">
		<div class="processInfo">웨이퍼 제조, 산화 공정</div>
	</div>

	<div class="additionalSubBox2">
		<div class="processInfo">포토, 식각 공정</div>
	</div>

	<div class="additionalSubBox3">
		<div class="processInfo">증착, 금속배선 공정</div>
	</div>

	<div class="additionalSubBox4">
		<div class="processInfo">EDS, 패키징 공정</div>
	</div>

	<div class="additionalSubBox5">
		<div class="processInfo">무게</div>
	</div>

	<div class="additionalSubBox6">
		<div class="processInfo">진동</div>
	</div>

	<div class="additionalSubBox7">
		<div class="processInfo">밝기</div>
	</div>

	<div class="additionalSubBox8">
		<div class="processInfo">온도</div>
	</div>
</div>
